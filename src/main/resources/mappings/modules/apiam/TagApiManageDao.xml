<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicom.usm.modules.apiam.dao.TagApiManageDao">

    <sql id="tagApiManageColumns">
    	   a.id,                  
		   a.api_name,             
		   a.join_ip,              
		   a.comment,            
		   a.user_name,           
		   a.user_password,      
		   a.api_status,          
		   a.create_time          
    </sql>
    
  <!--   <sql id="tagManageJoins">
		LEFT JOIN us_tag c ON c.id = a.category_id
		LEFT JOIN us_tag_category ca ON ca.id = a.category_id
    </sql>
	 -->
	<!-- 根据编号获得 -->
	<select id="get" resultType="TagApiManage">
		SELECT
			<include refid="tagApiManageColumns"/>
		FROM us_tag_api a
		WHERE a.id = #{id}
	</select>
	
	
	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="TagApiManage">
		SELECT
			<include refid="tagApiManageColumns"/>
		FROM us_tag_api a
		WHERE 1 =  1
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.id
			</otherwise>
		</choose>
	</select>
	
	<!-- 查询全部 -->
	<select id="findAllList" resultType="TagApiManage">
		SELECT
			<include refid="tagApiManageColumns"/>
		FROM us_tag_api a
		WHERE 1 = 1 
		ORDER BY a.id
	</select>
	
	<!-- 查询全部数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM us_tag_api a
		WHERE 1  =  1
	</select>
	
	<!-- 插入-->
	<insert id="insert">
		INSERT INTO us_tag_api (
		   id,                  
		   api_name,             
		   join_ip,              
		   comment,            
		   user_name,           
		   user_password,      
		   api_status,          
		   create_time    
		) VALUES (
			#{id}, 
			#{apiName}, 
			#{joinIp}, 
			#{comment}, 
			#{userName}, 
			#{userPassword}, 
			#{apiStatus}, 
			#{createTime} 
		)
	</insert>
	
	<!-- 更新 -->
	<update id="update">
		UPDATE us_tag_api SET 
			api_name = #{apiName}, 
			join_ip = #{joinIp}, 
			comment = #{comment}, 
			user_name = #{userName}, 
			user_password = #{userPassword}, 
			api_status = #{apiStatus}, 
			create_time = #{createTime}
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="delete">
		<!-- UPDATE sys_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} -->
		delete from us_tag_api where id = #{id}
	</update>
	
	<!-- 启用 -->
	<update id="start">
		UPDATE us_tag_api  SET 
			api_status = '00'
		WHERE id = #{id}
	</update>
	
	<!-- 暂停 -->
	<update id="pause">
		UPDATE us_tag_api SET 
			api_status = '01'
		WHERE id = #{id}
	</update>
	
</mapper>